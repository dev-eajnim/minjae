나의 첫 안드로이드_4

1) 툴바(==앱바): 앱 상단에 떠있는 것
- 상단에 놓을 수도 있고 하단에 놓을 수도 있습니다.
- Action icons
- Menu icon
- Nav icon

2) 레이아웃: 화면 배치
(1) Frame layout : 왼쪽 상단으로 위젯을 배치한다.
- 첫번째는 두번째 아래로 들어갑니다.쌓아올리는 것,
(2) Linear layout: 수평 수직으로 배치할 수 있는 레이아웃입니다.
- orientation
- 가중치: 크기를 다르게 하겠다.
- weightSum, layout_weight
(3) Relative layout: 상대적, 위젯 하나를 배치하면 나머지를 그 오른쪽, 아래에 배치하겠다라는 말들입니다.
- layout_alignParent
- layout_above
- layout_below
- layout_toStartof, start는 왼쪽
- layout_toEndof, end는 오른쪽
(4)Table layout: 격자배치입니다.자리 차지하는 공간은 똑같습니다.
- <TableRow> 에서 사용합니다.
- stretchColumns ="*" > "1": 다 늘려라, 첫번째를 늘려라 이런 뜻입니다.
Design탭 누르면 Attributes 창이 뜨고 거기서 layout을 통해 상하좌우 조정이 가능합니다. ㅋㅋㅋㅋ

3) 뷰 컨테이너
(1) 스크롤 뷰
- 반드시 하나의 스크롤뷰 안에는 하나의 뷰(텍스트,버튼, 컨테이너..)만 들어가야 합니다!
- 뷰의 종류는 많습니다. 
<ScrallView>
  <Linearlayout>
- HorizontalScrallview : 오른쪽으로 배치
(2) 라디오 그룹
- 라디오 그룹 미적용: 여러 개 선택 가능
- 라디오 그룹 적용: 여러 개 선택 불가능
- 레이아웃이 필요하니까 레이아웃이 가장 밖에 있고, 그 안에 라디오 그룹 넣고, 라디오 버튼을 여러개 배치합니다. 
(3) Cardview 중요!
- cardview를 import 선언해줘야합니다.
- implementation 'com.android.support:cardview-v7:27.1.1' 이건 오류나긴 하지만 이렇게 넣어줘야 합니다.
- ctrl alt l 정렬!
- cardCornerRadius: 카드 사각형 끝을 둥글게 만듭니다.
- cardElevation: 카드 주변 음영그림자에 대한 값입니다. 값이 커질수록 (2>4>8) 더 진한 그림자가 생깁니다.
- contentPadding: 겉부분, 패딩 값입니다.
- 텍스트 대신 이미지를 넣을 수도 있습니다. 같이 넣을 수도 있습니다.
- 바깥쪽에 카드 모양을 만들어주는 것 뿐입니다.
(4) RecyclerView
- 어렵기도 하지만 중요합니다. 이전에 리스트뷰나 그리드뷰를 사용했었는데 바꼈습니다. 속도 문제가 생겨서 더 좋은 리사이클러뷰를 만들었습니다.
- 레이아웃과 관련된 매니저들을 제공합니다.customizing도 더 쉽습니다.
- LinearLayoutManager, GridLayoutManager, 
- adapter 어딘가에 있는 데이터와 리사이클러뷰와 연결하는게 adapt입니다. 리사이클러뷰는 보여주는 것만 합니다.
- LinearLayoutManager: 아래로 배치
- GridLayoutManager: 격자 모양
- Staggered Grid: 엇박자로 배치

<1> RecyclerView 실습
1)
build.gradle > Module:app
dependencies에 마우스를 올리면 느낌표가 뜹니다. 거기서 add > cyclerview 를 추가합니다. implement
(참고: https://m.blog.naver.com/PostView.nhn?blogId=pistolcaffe&logNo=221010983726&proxyReferer=https%3A%2F%2Fwww.google.com%2F)
그 후에 sync 확인해줍니다.

실습못하겠엉 ㅠ 오류나는데 해결이 안되서


나의 첫 안드로이드_5
1) 프래그먼트 
- 프래그먼트는 액티비티 내에서만 사용할 수 있다. 둘은 같이 동작하기에 엑티비티가 종료되면 프래그먼트도 제거된다.


2) 알림기능: 각각의 특징을 기억해야 한다.
- notification : 상단에 알림을 띄우는 기능
(1) toast: 동그란 창이 뜸 - 잠깐 보여졌다가 사라지기에 안봐도 괜찮은 메세지를 쓸 때
Toast.makeText(this,"TOAST 메세지", Toast.Length_short).show()
- show 까지 꼭붙여줘야 함
- 언제 토스트창을 띄울지 적어야 함
(2) snackbar: 아래에서 올라옴 - 토스트보다 더 명확할 때
snackbar.make(v, "스낵바 메세지", Snackbar.Length_short).show()
- 뷰를 지정해줘야 함
(3) 다이얼로그: 창이 새로뜸 - 사용자에게 무조건 응답을 받아야할 때 

3) 
